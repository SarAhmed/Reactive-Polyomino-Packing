const _0 = 0.0;
const _1 = 0.1;
const _2 = 0.2;
const _3 = 0.3;
const _4 = 0.4;
const _5 = 0.5;
const _6 = 0.6;
const _7 = 0.7;
const _8 = 0.8;
const _9 = 0.9;

/**
 * GRADIENT is a two-dimensional array used to specify the magnitude of the damping force 
 * applied through out the layout. GRADIENT is then scaled to match the size of the layout 
 * by applying Bilinear Interpolation (https://en.wikipedia.org/wiki/Bilinear_interpolation).
 */
export const GRADIENT = [
    [_0, _0, _0, _0, _0, _0, _0, _0, _0, _0, _0, _0, _0, _0, _0, _0, _0, _0, _0, _0],
    [_0, _0, _1, _1, _1, _1, _1, _1, _1, _1, _1, _1, _1, _1, _1, _1, _1, _1, _0, _0],
    [_0, _1, _2, _2, _2, _2, _2, _2, _2, _2, _2, _2, _2, _2, _2, _2, _2, _2, _1, _0],
    [_0, _1, _2, _3, _3, _3, _3, _3, _3, _3, _3, _3, _3, _3, _3, _3, _3, _2, _1, _0],
    [_0, _1, _2, _3, _4, _4, _4, _4, _4, _4, _4, _4, _4, _4, _4, _4, _3, _2, _1, _0],
    [_0, _1, _2, _3, _4, _5, _5, _5, _5, _5, _5, _5, _5, _5, _5, _4, _3, _2, _1, _0],
    [_0, _1, _2, _3, _4, _5, _6, _6, _6, _6, _6, _6, _6, _6, _5, _4, _3, _2, _1, _0],
    [_0, _1, _2, _3, _4, _5, _6, _7, _7, _7, _7, _7, _7, _6, _5, _4, _3, _2, _1, _0],
    [_0, _1, _2, _3, _4, _5, _6, _7, _8, _8, _8, _8, _7, _6, _5, _4, _3, _2, _1, _0],
    [_0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _9, _8, _7, _6, _5, _4, _3, _2, _1, _0],
    [_0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _9, _8, _7, _6, _5, _4, _3, _2, _1, _0],
    [_0, _1, _2, _3, _4, _5, _6, _7, _8, _8, _8, _8, _7, _6, _5, _4, _3, _2, _1, _0],
    [_0, _1, _2, _3, _4, _5, _6, _7, _7, _7, _7, _7, _7, _6, _5, _4, _3, _2, _1, _0],
    [_0, _1, _2, _3, _4, _5, _6, _6, _6, _6, _6, _6, _6, _6, _5, _4, _3, _2, _1, _0],
    [_0, _1, _2, _3, _4, _5, _5, _5, _5, _5, _5, _5, _5, _5, _5, _4, _3, _2, _1, _0],
    [_0, _1, _2, _3, _4, _4, _4, _4, _4, _4, _4, _4, _4, _4, _4, _4, _3, _2, _1, _0],
    [_0, _1, _2, _3, _3, _3, _3, _3, _3, _3, _3, _3, _3, _3, _3, _3, _3, _2, _1, _0],
    [_0, _1, _2, _2, _2, _2, _2, _2, _2, _2, _2, _2, _2, _2, _2, _2, _2, _2, _1, _0],
    [_0, _0, _1, _1, _1, _1, _1, _1, _1, _1, _1, _1, _1, _1, _1, _1, _1, _1, _0, _0],
    [_0, _0, _0, _0, _0, _0, _0, _0, _0, _0, _0, _0, _0, _0, _0, _0, _0, _0, _0, _0]
];
